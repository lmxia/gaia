
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: hypernodes.cluster.pml.com.cn
spec:
  group: cluster.pml.com.cn
  names:
    categories:
    - gaia
    kind: Hypernode
    listKind: HypernodeList
    plural: hypernodes
    shortNames:
    - hn
    singular: hypernode
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.myAreaName
      name: MyArea Name
      type: string
    - jsonPath: .spec.nodeAreaType
      name: NodeArea Type
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Hypernode is a specification for a Hypernode resource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HypernodeSpec is the spec for a Hypernode resource
            properties:
              myAreaName:
                type: string
              nodeAreaType:
                type: string
              supervisorName:
                type: string
            required:
            - myAreaName
            - nodeAreaType
            - supervisorName
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
